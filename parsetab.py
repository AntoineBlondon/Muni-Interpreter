
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AS AT BOOL BREAK CASE COLON COMMA DEFAULT DIV DIVEQ ELSE EQ EQUALS FALSE FLOAT FLOAT_LITERAL FOR GE GT IDENTIFIER IF IMPORT IN INT INTEGER_LITERAL LARROW LBRACE LBRACKET LE LIST LPAREN LT MINUS MINUSEQ MUL MULEQ NE PIPE PLUS PLUSEQ RARROW RBRACE RBRACKET RETURN RPAREN SEMI STR STRING_LITERAL SWITCH TRUE UNTYPED VOID WHILEprogram : statementsstatements : statement SEMI statements\n                  | statement SEMI\n                  | statement statements\n                  | statementfunction_declaration : type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE EQUALS expression\n                            | type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEparameters : type_specifier IDENTIFIER COMMA parameters\n                  | type_specifier IDENTIFIER\n                  | expression  : IDENTIFIER LPAREN arguments RPAREN\n                   | IDENTIFIER PIPE IDENTIFIER LPAREN arguments RPARENarguments : expression COMMA arguments\n                 | expression\n                 | return_statement : RETURN expression SEMIstatement : declaration\n                 | assignment\n                 | function_declaration\n                 | expression\n                 | list_operation\n                 | return_statementstatement : IMPORT expression AS IDENTIFIER\n                 | IMPORT expressionstatement : IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statements RBRACEstatement : FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRACE statements RBRACE\n                 | FOR LPAREN type_specifier IDENTIFIER IN expression RPAREN LBRACE statements RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE statements RBRACEstatement : WHILE LPAREN expression RPAREN COLON expression LBRACE statements RBRACEstatement : SWITCH LPAREN expression RPAREN LBRACE case_statements RBRACEcase_statements : CASE expression COLON statements case_statements\n                       | DEFAULT COLON statements\n                       | statement : BREAK SEMIexpression : LBRACKET elements RBRACKET\n                  | LBRACKET RBRACKETelements : expression COMMA elements\n                | expressionexpression : expression LBRACKET expression RBRACKETlist_operation : IDENTIFIER LBRACKET expression RBRACKET EQUALS expression\n                      | IDENTIFIER LBRACKET expression RBRACKET LARROW expression\n                      | IDENTIFIER MINUSEQ LBRACKET expression RBRACKETexpression : IDENTIFIER AT expressiondeclaration : type_specifier IDENTIFIER EQUALS expressiontype_specifier : INT\n                     | FLOAT\n                     | BOOL\n                     | STR\n                     | UNTYPED\n                     | VOID\n                     | LIST LT type_specifier GTassignment : IDENTIFIER EQUALS expression\n                  | IDENTIFIER double_operation expressiondouble_operation : PLUSEQ\n                        | MINUSEQ\n                        | MULEQ\n                        | DIVEQexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIV expressionexpression : INTEGER_LITERALexpression : MINUS INTEGER_LITERALexpression : FLOAT_LITERALexpression : MINUS FLOAT_LITERALexpression : TRUE\n                  | FALSEexpression : STRING_LITERALexpression : IDENTIFIERexpression : expression GT expression\n                  | expression LT expression\n                  | expression EQ expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression NE expressionexpression : LPAREN expression RPARENexpression : expression RARROW type_specifier'
    
_lr_action_items = {'IMPORT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[10,10,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,10,-24,-70,10,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,10,10,-12,-41,-42,10,10,-26,-29,10,-31,10,10,-7,10,10,10,-30,-28,-6,-25,-27,]),'IF':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[12,12,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,12,-24,-70,12,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,12,12,-12,-41,-42,12,12,-26,-29,12,-31,12,12,-7,12,12,12,-30,-28,-6,-25,-27,]),'FOR':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[14,14,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,14,-24,-70,14,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,14,14,-12,-41,-42,14,14,-26,-29,14,-31,14,14,-7,14,14,14,-30,-28,-6,-25,-27,]),'WHILE':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[16,16,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,16,-24,-70,16,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,16,16,-12,-41,-42,16,16,-26,-29,16,-31,16,16,-7,16,16,16,-30,-28,-6,-25,-27,]),'SWITCH':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[17,17,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,17,-24,-70,17,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,17,17,-12,-41,-42,17,17,-26,-29,17,-31,17,17,-7,17,17,17,-30,-28,-6,-25,-27,]),'BREAK':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[18,18,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,18,-24,-70,18,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,18,18,-12,-41,-42,18,18,-26,-29,18,-31,18,18,-7,18,18,18,-30,-28,-6,-25,-27,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,13,15,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,97,99,100,104,105,106,108,109,110,111,112,116,118,119,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[11,11,-17,-18,-19,-20,-21,-22,49,-70,49,63,49,-63,-65,-67,-68,-69,49,-46,-47,-48,-49,-50,-51,11,49,49,49,49,49,49,49,49,49,49,49,-24,-70,49,49,49,92,49,49,-56,-55,-57,-58,49,11,49,49,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,109,-53,-54,-44,49,-77,117,49,-36,49,-16,-40,-23,-11,49,49,49,-45,133,-52,49,49,-43,11,49,11,49,-12,-41,-42,11,11,49,-26,-29,11,-31,11,11,-7,11,11,11,49,-30,-28,-6,-25,-27,]),'LBRACKET':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,95,96,97,100,102,103,104,105,106,108,109,110,111,112,114,116,118,124,127,128,129,130,131,132,135,136,138,139,140,142,143,145,147,149,151,156,157,158,159,160,163,164,166,168,169,171,172,176,177,179,180,],[19,19,-17,-18,-19,36,-21,-22,19,55,19,19,-63,-65,-67,-68,-69,19,-46,-47,-48,-49,-50,-51,19,19,19,19,19,19,19,19,19,19,19,19,36,-70,19,19,19,19,19,95,-55,-57,-58,19,36,19,19,19,-35,-37,36,-64,-66,36,36,36,36,36,36,36,36,36,36,36,36,-78,36,36,36,36,36,19,36,-77,19,36,36,-36,19,-16,-40,-23,-11,19,19,36,19,36,-52,19,19,-43,19,36,19,19,19,-12,36,36,19,36,19,36,19,-26,-29,19,-31,36,19,19,-7,19,19,19,19,-30,-28,36,-25,-27,]),'INTEGER_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,95,97,100,104,105,106,108,109,110,111,112,116,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[21,21,-17,-18,-19,-20,-21,-22,21,-70,21,21,70,-63,-65,-67,-68,-69,21,-46,-47,-48,-49,-50,-51,21,21,21,21,21,21,21,21,21,21,21,21,-24,-70,21,21,21,21,21,-56,-55,-57,-58,21,21,21,21,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,21,-77,21,-36,21,-16,-40,-23,-11,21,21,21,-45,-52,21,21,-43,21,21,21,21,-12,-41,-42,21,21,21,-26,-29,21,-31,21,21,-7,21,21,21,21,-30,-28,-6,-25,-27,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,64,65,66,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,95,96,97,100,102,103,104,105,106,108,109,110,111,112,114,116,118,124,127,128,129,130,131,132,135,136,138,139,140,142,143,145,147,149,151,156,157,158,159,160,163,164,166,168,169,171,172,176,177,179,180,],[20,20,-17,-18,-19,38,-21,-22,20,-70,20,20,-63,-65,-67,-68,-69,20,-46,-47,-48,-49,-50,-51,20,20,20,20,20,20,20,20,20,20,20,20,38,-70,20,20,20,20,20,-56,-55,-57,-58,20,38,20,20,20,-35,-37,38,-64,-66,38,38,38,38,38,38,38,38,38,38,38,38,-78,38,38,38,38,38,20,38,-77,20,38,38,-36,20,-16,-40,-23,-11,20,20,38,20,38,-52,20,20,-43,20,38,20,20,20,-12,38,38,20,38,20,38,20,-26,-29,20,-31,38,20,20,-7,20,20,20,20,-30,-28,38,-25,-27,]),'FLOAT_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,95,97,100,104,105,106,108,109,110,111,112,116,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[22,22,-17,-18,-19,-20,-21,-22,22,-70,22,22,71,-63,-65,-67,-68,-69,22,-46,-47,-48,-49,-50,-51,22,22,22,22,22,22,22,22,22,22,22,22,-24,-70,22,22,22,22,22,-56,-55,-57,-58,22,22,22,22,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,22,-77,22,-36,22,-16,-40,-23,-11,22,22,22,-45,-52,22,22,-43,22,22,22,22,-12,-41,-42,22,22,22,-26,-29,22,-31,22,22,-7,22,22,22,22,-30,-28,-6,-25,-27,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,95,97,100,104,105,106,108,109,110,111,112,116,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[23,23,-17,-18,-19,-20,-21,-22,23,-70,23,23,-63,-65,-67,-68,-69,23,-46,-47,-48,-49,-50,-51,23,23,23,23,23,23,23,23,23,23,23,23,-24,-70,23,23,23,23,23,-56,-55,-57,-58,23,23,23,23,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,23,-77,23,-36,23,-16,-40,-23,-11,23,23,23,-45,-52,23,23,-43,23,23,23,23,-12,-41,-42,23,23,23,-26,-29,23,-31,23,23,-7,23,23,23,23,-30,-28,-6,-25,-27,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,95,97,100,104,105,106,108,109,110,111,112,116,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[24,24,-17,-18,-19,-20,-21,-22,24,-70,24,24,-63,-65,-67,-68,-69,24,-46,-47,-48,-49,-50,-51,24,24,24,24,24,24,24,24,24,24,24,24,-24,-70,24,24,24,24,24,-56,-55,-57,-58,24,24,24,24,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,24,-77,24,-36,24,-16,-40,-23,-11,24,24,24,-45,-52,24,24,-43,24,24,24,24,-12,-41,-42,24,24,24,-26,-29,24,-31,24,24,-7,24,24,24,24,-30,-28,-6,-25,-27,]),'STRING_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,95,97,100,104,105,106,108,109,110,111,112,116,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[25,25,-17,-18,-19,-20,-21,-22,25,-70,25,25,-63,-65,-67,-68,-69,25,-46,-47,-48,-49,-50,-51,25,25,25,25,25,25,25,25,25,25,25,25,-24,-70,25,25,25,25,25,-56,-55,-57,-58,25,25,25,25,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,25,-77,25,-36,25,-16,-40,-23,-11,25,25,25,-45,-52,25,25,-43,25,25,25,25,-12,-41,-42,25,25,25,-26,-29,25,-31,25,25,-7,25,25,25,25,-30,-28,-6,-25,-27,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,60,62,63,64,65,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,92,93,95,97,100,104,105,106,108,109,110,111,112,116,117,118,124,127,128,129,130,132,135,136,138,139,140,142,145,149,151,156,157,158,160,163,164,166,168,169,171,172,176,177,179,180,],[13,13,-17,-18,-19,-20,-21,-22,13,52,60,13,62,64,65,13,-63,-65,-67,-68,-69,13,-46,-47,-48,-49,-50,-51,13,13,13,13,13,13,13,13,13,13,13,13,-24,52,13,13,13,13,13,-56,-55,-57,-58,13,13,101,13,13,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,112,-44,13,-77,13,-36,13,-16,-40,-23,-11,13,13,13,101,-45,-52,13,13,-43,13,13,13,13,-12,-41,-42,13,13,13,-26,-29,13,-31,13,13,-7,13,13,13,13,-30,-28,-6,-25,-27,]),'RETURN':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,48,49,62,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,130,135,138,139,140,142,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[26,26,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,26,-24,-70,26,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,26,26,-12,-41,-42,26,26,-26,-29,26,-31,26,26,-7,26,26,26,-30,-28,-6,-25,-27,]),'INT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[27,27,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,27,27,-24,-70,27,-35,-37,-64,-66,27,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,27,-36,-16,-40,-23,-11,-45,-52,-43,27,27,-12,-41,-42,27,27,27,-26,-29,27,-31,27,27,-7,27,27,27,-30,-28,-6,-25,-27,]),'FLOAT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[28,28,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,28,28,-24,-70,28,-35,-37,-64,-66,28,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,28,-36,-16,-40,-23,-11,-45,-52,-43,28,28,-12,-41,-42,28,28,28,-26,-29,28,-31,28,28,-7,28,28,28,-30,-28,-6,-25,-27,]),'BOOL':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[29,29,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,29,29,-24,-70,29,-35,-37,-64,-66,29,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,29,-36,-16,-40,-23,-11,-45,-52,-43,29,29,-12,-41,-42,29,29,29,-26,-29,29,-31,29,29,-7,29,29,29,-30,-28,-6,-25,-27,]),'STR':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[30,30,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,30,30,-24,-70,30,-35,-37,-64,-66,30,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,30,-36,-16,-40,-23,-11,-45,-52,-43,30,30,-12,-41,-42,30,30,30,-26,-29,30,-31,30,30,-7,30,30,30,-30,-28,-6,-25,-27,]),'UNTYPED':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[31,31,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,31,31,-24,-70,31,-35,-37,-64,-66,31,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,31,-36,-16,-40,-23,-11,-45,-52,-43,31,31,-12,-41,-42,31,31,31,-26,-29,31,-31,31,31,-7,31,31,31,-30,-28,-6,-25,-27,]),'VOID':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[32,32,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,32,32,-24,-70,32,-35,-37,-64,-66,32,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,32,-36,-16,-40,-23,-11,-45,-52,-43,32,32,-12,-41,-42,32,32,32,-26,-29,32,-31,32,32,-7,32,32,32,-30,-28,-6,-25,-27,]),'LIST':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,47,48,49,62,66,68,70,71,73,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,101,104,106,108,109,110,118,124,129,130,135,138,139,140,142,144,145,151,156,157,158,160,163,164,166,168,169,172,176,177,179,180,],[33,33,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,33,33,-24,-70,33,-35,-37,-64,-66,33,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,33,-36,-16,-40,-23,-11,-45,-52,-43,33,33,-12,-41,-42,33,33,33,-26,-29,33,-31,33,33,-7,33,33,33,-30,-28,-6,-25,-27,]),'$end':([1,2,3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,35,48,49,66,68,70,71,74,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,138,139,140,151,156,158,164,172,176,177,179,180,],[0,-1,-5,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-3,-4,-24,-70,-35,-37,-64,-66,-2,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,-12,-41,-42,-26,-29,-31,-7,-30,-28,-6,-25,-27,]),'SEMI':([3,4,5,6,7,8,9,11,18,21,22,23,24,25,27,28,29,30,31,32,48,49,66,68,70,71,72,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,98,104,106,108,109,110,118,124,129,131,138,139,140,151,156,158,164,172,176,177,179,180,],[34,-17,-18,-19,-20,-21,-22,-70,66,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-24,-70,-35,-37,-64,-66,106,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,116,-36,-16,-40,-23,-11,-45,-52,-43,142,-12,-41,-42,-26,-29,-31,-7,-30,-28,-6,-25,-27,]),'RBRACE':([3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,35,48,49,66,68,70,71,74,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,137,138,139,140,141,146,148,151,155,156,158,164,165,167,170,172,173,174,175,176,177,178,179,180,],[-5,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-3,-4,-24,-70,-35,-37,-64,-66,-2,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,-34,-12,-41,-42,151,156,158,-26,164,-29,-31,-7,172,-33,176,-30,-34,179,180,-28,-6,-32,-25,-27,]),'CASE':([3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,35,48,49,66,68,70,71,74,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,137,138,139,140,151,156,158,164,172,173,176,177,179,180,],[-5,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-3,-4,-24,-70,-35,-37,-64,-66,-2,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,149,-12,-41,-42,-26,-29,-31,-7,-30,149,-28,-6,-25,-27,]),'DEFAULT':([3,4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,34,35,48,49,66,68,70,71,74,76,77,78,79,80,81,82,83,84,85,86,88,89,93,97,104,106,108,109,110,118,124,129,137,138,139,140,151,156,158,164,172,173,176,177,179,180,],[-5,-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-3,-4,-24,-70,-35,-37,-64,-66,-2,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,-44,-77,-36,-16,-40,-23,-11,-45,-52,-43,150,-12,-41,-42,-26,-29,-31,-7,-30,150,-28,-6,-25,-27,]),'RPAREN':([4,5,6,7,8,9,11,21,22,23,24,25,27,28,29,30,31,32,48,49,52,61,66,68,70,71,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,93,96,97,101,102,103,104,106,108,109,110,111,112,118,120,124,125,126,129,133,138,139,140,143,144,151,152,154,156,158,164,172,176,177,179,180,],[-17,-18,-19,-20,-21,-22,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-24,-70,-15,97,-35,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-53,-54,110,-14,-44,115,-77,-10,121,122,-36,-16,-40,-23,-11,-15,-15,-45,134,-52,-13,138,-43,-9,-12,-41,-42,153,-10,-26,162,-8,-29,-31,-7,-30,-28,-6,-25,-27,]),'PLUS':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[37,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,37,-70,37,-37,37,-64,-66,37,37,37,37,37,37,37,37,37,37,37,37,-78,37,37,37,37,37,37,-77,37,37,-36,-40,-11,37,37,-52,37,-12,37,37,37,37,37,37,]),'MUL':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[39,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,39,-70,39,-37,39,-64,-66,39,39,39,39,39,39,39,39,39,39,39,39,-78,39,39,39,39,39,39,-77,39,39,-36,-40,-11,39,39,-52,39,-12,39,39,39,39,39,39,]),'DIV':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[40,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,40,-70,40,-37,40,-64,-66,40,40,40,40,40,40,40,40,40,40,40,40,-78,40,40,40,40,40,40,-77,40,40,-36,-40,-11,40,40,-52,40,-12,40,40,40,40,40,40,]),'GT':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,107,108,110,114,118,124,131,138,139,140,143,147,159,177,],[41,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,41,-70,41,-37,41,-64,-66,41,41,41,41,41,41,41,41,41,41,41,41,-78,41,41,41,41,41,41,-77,41,41,-36,124,-40,-11,41,41,-52,41,-12,41,41,41,41,41,41,]),'LT':([7,11,21,22,23,24,25,27,28,29,30,31,32,33,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[42,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,73,42,-70,42,-37,42,-64,-66,42,42,42,42,42,42,42,42,42,42,42,42,-78,42,42,42,42,42,42,-77,42,42,-36,-40,-11,42,42,-52,42,-12,42,42,42,42,42,42,]),'EQ':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[43,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,43,-70,43,-37,43,-64,-66,43,43,43,43,43,43,43,43,43,43,43,43,-78,43,43,43,43,43,43,-77,43,43,-36,-40,-11,43,43,-52,43,-12,43,43,43,43,43,43,]),'GE':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[44,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,44,-70,44,-37,44,-64,-66,44,44,44,44,44,44,44,44,44,44,44,44,-78,44,44,44,44,44,44,-77,44,44,-36,-40,-11,44,44,-52,44,-12,44,44,44,44,44,44,]),'LE':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[45,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,45,-70,45,-37,45,-64,-66,45,45,45,45,45,45,45,45,45,45,45,45,-78,45,45,45,45,45,45,-77,45,45,-36,-40,-11,45,45,-52,45,-12,45,45,45,45,45,45,]),'NE':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[46,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,46,-70,46,-37,46,-64,-66,46,46,46,46,46,46,46,46,46,46,46,46,-78,46,46,46,46,46,46,-77,46,46,-36,-40,-11,46,46,-52,46,-12,46,46,46,46,46,46,]),'RARROW':([7,11,21,22,23,24,25,27,28,29,30,31,32,48,49,61,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,93,94,96,97,102,103,104,108,110,114,118,124,131,138,139,140,143,147,159,177,],[47,-70,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,47,-70,47,-37,47,-64,-66,47,47,47,47,47,47,47,47,47,47,47,47,-78,47,47,47,47,47,47,-77,47,47,-36,-40,-11,47,47,-52,47,-12,47,47,47,47,47,47,]),'EQUALS':([11,63,113,117,164,],[50,100,127,100,171,]),'PIPE':([11,49,],[53,53,]),'AT':([11,49,],[54,54,]),'MINUSEQ':([11,],[56,]),'PLUSEQ':([11,],[57,]),'MULEQ':([11,],[58,]),'DIVEQ':([11,],[59,]),'RBRACKET':([19,21,22,23,24,25,27,28,29,30,31,32,49,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,93,94,97,104,108,110,114,123,124,138,],[68,-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-70,104,-37,-39,-64,-66,108,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-44,113,-77,-36,-40,-11,129,-38,-52,-12,]),'AS':([21,22,23,24,25,27,28,29,30,31,32,48,49,68,70,71,76,77,78,79,80,81,82,83,84,85,86,93,97,104,108,110,124,138,],[-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,87,-70,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-44,-77,-36,-40,-11,-52,-12,]),'COMMA':([21,22,23,24,25,27,28,29,30,31,32,49,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,91,93,97,104,108,110,124,133,138,],[-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-70,-37,105,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,111,-44,-77,-36,-40,-11,-52,144,-12,]),'LBRACE':([21,22,23,24,25,27,28,29,30,31,32,49,68,70,71,76,77,78,79,80,81,82,83,84,85,86,93,97,104,108,110,115,121,122,124,134,138,147,153,161,162,],[-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-70,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-44,-77,-36,-40,-11,130,135,137,-52,145,-12,157,163,168,169,]),'COLON':([21,22,23,24,25,27,28,29,30,31,32,49,68,70,71,76,77,78,79,80,81,82,83,84,85,86,93,97,104,108,110,121,124,138,150,159,],[-63,-65,-67,-68,-69,-46,-47,-48,-49,-50,-51,-70,-37,-64,-66,-59,-60,-61,-62,-71,-72,-73,-74,-75,-76,-78,-44,-77,-36,-40,-11,136,-52,-12,160,166,]),'LARROW':([113,],[128,]),'IN':([117,],[132,]),'ELSE':([151,],[161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,34,130,135,145,157,160,163,166,168,169,],[2,35,74,141,146,155,165,167,170,173,174,175,]),'statement':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[3,3,3,98,3,3,152,3,3,3,3,3,3,3,]),'declaration':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'function_declaration':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,3,10,13,19,26,34,36,37,38,39,40,41,42,43,44,45,46,50,51,52,54,55,60,62,64,65,95,100,105,111,112,116,127,128,130,132,135,136,142,145,149,157,160,163,166,168,169,171,],[7,7,48,61,69,72,7,75,76,77,78,79,80,81,82,83,84,85,88,89,91,93,94,96,7,102,103,114,118,69,91,91,131,139,140,7,143,7,147,7,7,159,7,7,7,7,7,7,177,]),'list_operation':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'return_statement':([0,3,34,62,130,135,142,145,157,160,163,166,168,169,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'type_specifier':([0,3,34,47,62,73,101,130,135,142,144,145,157,160,163,166,168,169,],[15,15,15,86,99,107,119,15,15,15,119,15,15,15,15,15,15,15,]),'double_operation':([11,],[51,]),'elements':([19,105,],[67,123,]),'arguments':([52,111,112,],[90,125,126,]),'parameters':([101,144,],[120,154,]),'case_statements':([137,173,],[148,178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','muniparser.py',16),
  ('statements -> statement SEMI statements','statements',3,'p_statements','muniparser.py',21),
  ('statements -> statement SEMI','statements',2,'p_statements','muniparser.py',22),
  ('statements -> statement statements','statements',2,'p_statements','muniparser.py',23),
  ('statements -> statement','statements',1,'p_statements','muniparser.py',24),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE EQUALS expression','function_declaration',10,'p_function_declaration','muniparser.py',38),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','muniparser.py',39),
  ('parameters -> type_specifier IDENTIFIER COMMA parameters','parameters',4,'p_parameters','muniparser.py',49),
  ('parameters -> type_specifier IDENTIFIER','parameters',2,'p_parameters','muniparser.py',50),
  ('parameters -> <empty>','parameters',0,'p_parameters','muniparser.py',51),
  ('expression -> IDENTIFIER LPAREN arguments RPAREN','expression',4,'p_expression_function_call','muniparser.py',61),
  ('expression -> IDENTIFIER PIPE IDENTIFIER LPAREN arguments RPAREN','expression',6,'p_expression_function_call','muniparser.py',62),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','muniparser.py',70),
  ('arguments -> expression','arguments',1,'p_arguments','muniparser.py',71),
  ('arguments -> <empty>','arguments',0,'p_arguments','muniparser.py',72),
  ('return_statement -> RETURN expression SEMI','return_statement',3,'p_return_statement','muniparser.py',81),
  ('statement -> declaration','statement',1,'p_statement','muniparser.py',86),
  ('statement -> assignment','statement',1,'p_statement','muniparser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','muniparser.py',88),
  ('statement -> expression','statement',1,'p_statement','muniparser.py',89),
  ('statement -> list_operation','statement',1,'p_statement','muniparser.py',90),
  ('statement -> return_statement','statement',1,'p_statement','muniparser.py',91),
  ('statement -> IMPORT expression AS IDENTIFIER','statement',4,'p_import_statement','muniparser.py',96),
  ('statement -> IMPORT expression','statement',2,'p_import_statement','muniparser.py',97),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','statement',11,'p_if_else_statement','muniparser.py',105),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_if_else_statement','muniparser.py',106),
  ('statement -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRACE statements RBRACE','statement',11,'p_for_loop','muniparser.py',113),
  ('statement -> FOR LPAREN type_specifier IDENTIFIER IN expression RPAREN LBRACE statements RBRACE','statement',10,'p_for_loop','muniparser.py',114),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_while_loop','muniparser.py',122),
  ('statement -> WHILE LPAREN expression RPAREN COLON expression LBRACE statements RBRACE','statement',9,'p_do_while_loop','muniparser.py',127),
  ('statement -> SWITCH LPAREN expression RPAREN LBRACE case_statements RBRACE','statement',7,'p_switch_statement','muniparser.py',132),
  ('case_statements -> CASE expression COLON statements case_statements','case_statements',5,'p_case_statements','muniparser.py',136),
  ('case_statements -> DEFAULT COLON statements','case_statements',3,'p_case_statements','muniparser.py',137),
  ('case_statements -> <empty>','case_statements',0,'p_case_statements','muniparser.py',138),
  ('statement -> BREAK SEMI','statement',2,'p_break_statement','muniparser.py',147),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_list_literal','muniparser.py',151),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_list_literal','muniparser.py',152),
  ('elements -> expression COMMA elements','elements',3,'p_elements','muniparser.py',159),
  ('elements -> expression','elements',1,'p_elements','muniparser.py',160),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_index','muniparser.py',167),
  ('list_operation -> IDENTIFIER LBRACKET expression RBRACKET EQUALS expression','list_operation',6,'p_list_operation','muniparser.py',171),
  ('list_operation -> IDENTIFIER LBRACKET expression RBRACKET LARROW expression','list_operation',6,'p_list_operation','muniparser.py',172),
  ('list_operation -> IDENTIFIER MINUSEQ LBRACKET expression RBRACKET','list_operation',5,'p_list_operation','muniparser.py',173),
  ('expression -> IDENTIFIER AT expression','expression',3,'p_list_find','muniparser.py',182),
  ('declaration -> type_specifier IDENTIFIER EQUALS expression','declaration',4,'p_declaration','muniparser.py',186),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','muniparser.py',190),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','muniparser.py',191),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','muniparser.py',192),
  ('type_specifier -> STR','type_specifier',1,'p_type_specifier','muniparser.py',193),
  ('type_specifier -> UNTYPED','type_specifier',1,'p_type_specifier','muniparser.py',194),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','muniparser.py',195),
  ('type_specifier -> LIST LT type_specifier GT','type_specifier',4,'p_type_specifier','muniparser.py',196),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','muniparser.py',206),
  ('assignment -> IDENTIFIER double_operation expression','assignment',3,'p_assignment','muniparser.py',207),
  ('double_operation -> PLUSEQ','double_operation',1,'p_double_operation','muniparser.py',214),
  ('double_operation -> MINUSEQ','double_operation',1,'p_double_operation','muniparser.py',215),
  ('double_operation -> MULEQ','double_operation',1,'p_double_operation','muniparser.py',216),
  ('double_operation -> DIVEQ','double_operation',1,'p_double_operation','muniparser.py',217),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','muniparser.py',221),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','muniparser.py',222),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','muniparser.py',223),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','muniparser.py',224),
  ('expression -> INTEGER_LITERAL','expression',1,'p_expression_number','muniparser.py',228),
  ('expression -> MINUS INTEGER_LITERAL','expression',2,'p_expression_negative_number','muniparser.py',233),
  ('expression -> FLOAT_LITERAL','expression',1,'p_expression_float','muniparser.py',237),
  ('expression -> MINUS FLOAT_LITERAL','expression',2,'p_expression_negative_float','muniparser.py',241),
  ('expression -> TRUE','expression',1,'p_expression_boolean','muniparser.py',245),
  ('expression -> FALSE','expression',1,'p_expression_boolean','muniparser.py',246),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_string','muniparser.py',250),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','muniparser.py',255),
  ('expression -> expression GT expression','expression',3,'p_expression_compare','muniparser.py',259),
  ('expression -> expression LT expression','expression',3,'p_expression_compare','muniparser.py',260),
  ('expression -> expression EQ expression','expression',3,'p_expression_compare','muniparser.py',261),
  ('expression -> expression GE expression','expression',3,'p_expression_compare','muniparser.py',262),
  ('expression -> expression LE expression','expression',3,'p_expression_compare','muniparser.py',263),
  ('expression -> expression NE expression','expression',3,'p_expression_compare','muniparser.py',264),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','muniparser.py',269),
  ('expression -> expression RARROW type_specifier','expression',3,'p_expression_cast','muniparser.py',273),
]
